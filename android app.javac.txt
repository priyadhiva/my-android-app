package com.shellmonger.weatherapp;
 
import android.support.v7.app.AppCompatActivity;
import android.graphics.Typeface;
import android.widget.TextView;
import android.os.Bundle;
 
public class MainActivity extends AppCompatActivity {
    TextView weatherIcon;
    Typeface weatherFont;
 
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
 
        weatherFont = Typeface.createFromAsset(getAssets(), "fonts/weathericons-regular-webfont.ttf");
        weatherIcon = (TextView)findViewById(R.id.weather_icon);
        weatherIcon.setTypeface(weatherFont);
    }
}
GetWeatherAsyncTask task = new GetWeatherAsyncTask();
task.execute(new String[] { "Seattle,WA" });
class GetWeatherAsyncTask extends AsyncTask<String,Void,WeatherResponse> {
    @Override
    protected WeatherResponse doInBackground(String... cities) {
        try {
            WeatherManager manager = new WeatherManager();
            return manager.getWeatherByCityName(cities[0]);
        } catch (WeatherException ex) {
            return null;
        }
    }
 
    @Override
    protected void onPostExecute(WeatherResponse response) {
        if (response != null) {
            // Do something here
        }
    }
}
@Override
protected void onPostExecute(WeatherResponse response) {
    if (response != null) {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
         
        c_city.setText(response.getCityName() + ", " + response.getSysInfo().getCountry());
        c_details.setText(response.getWeatherConditions()[0].getLongDescription());
        double temp = response.getMain().getTemperature().getCurrentValue();
        double convertedTemp = temp * (9.0/5.0) - 459.67;
        c_temperature.setText(String.format("%.2f°F", convertedTemp));
        c_updated.setText(formatter.format(response.getTimestamp()));
    }
}
private String convertWeather(String iconCode) {
    boolean isDay = iconCode.charAt(2) == 'd';
    String weatherIcon = "f07b";
    int icon = Integer.parseInt(iconCode.substring(0,2), 10);
 
    switch (icon) {
        case 1:
            weatherIcon = isDay ? "f00d" : "f02e";
            break;
        case 2:
        case 3:
        case 4:
            weatherIcon = isDay ? "f002" : "f086";
            break;
        case 9:
            weatherIcon = isDay ? "f009" : "f029";
            break;
        case 10:
            weatherIcon = isDay ? "f008" : "f028";
            break;
        case 11:
            weatherIcon = isDay ? "f005" : "f025";
            break;
        case 13:
            weatherIcon = isDay ? "f00a" : "f02a";
            break;
        case 50:
            weatherIcon = "&#xf014";
            break;
    }
    return  "&#x" + weatherIcon + ";";
}
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.shellmonger.weatherapp">
 
    <uses-permission android:name="android.permission.INTERNET"/>
     
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
 
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>
c_city = (TextView)findViewById(R.id.city_field);
c_details = (TextView)findViewById(R.id.details_field);
c_temperature = (TextView)findViewById(R.id.current_temperature_field);
c_updated = (TextView)findViewById(R.id.updated_field);
weatherIcon = (TextView)findViewById(R.id.weather_icon);
String weatherCode = convertWeather(response.getWeatherConditions()[0].getIcon());
// This is for API versions < 24
weatherIcon.setText(Html.fromHtml(weatherCode));
 
// This is for API versions >= 24
// weatherIcon.setText(Html.fromHtml(weatherCode, Html.FROM_HTML_MODE_LEGACY